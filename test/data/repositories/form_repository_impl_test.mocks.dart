// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_app/test/data/repositories/form_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:techmate_demo/core/network/network_info.dart' as _i9;
import 'package:techmate_demo/data/datasources/firebase_data_source.dart'
    as _i3;
import 'package:techmate_demo/data/datasources/local_data_source.dart' as _i5;
import 'package:techmate_demo/data/models/form_data_model.dart' as _i8;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeInternetConnectionChecker_0 extends _i1.SmartFake
    implements _i2.InternetConnectionChecker {
  _FakeInternetConnectionChecker_0(super.parent, super.invocation);
}

/// A class which mocks [FirebaseDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDataSource extends _i1.Mock
    implements _i3.FirebaseDataSource {
  MockFirebaseDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> createUserWithEmailAndPassword(
          String? email, String? password, String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [email, password, name],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> signInWithEmailAndPassword(
          String? email, String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [email, password],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i6.User? getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValueForMissingStub: null,
      ) as _i6.User?);
  @override
  _i4.Future<void> createFormData(_i8.FormDataModel? formData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFormData,
          [formData],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i8.FormDataModel>> getFormData() => (super.noSuchMethod(
        Invocation.method(
          #getFormData,
          [],
        ),
        returnValue:
            _i4.Future<List<_i8.FormDataModel>>.value(<_i8.FormDataModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i8.FormDataModel>>.value(<_i8.FormDataModel>[]),
      ) as _i4.Future<List<_i8.FormDataModel>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i5.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> cacheFormData(_i8.FormDataModel? formData) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheFormData,
          [formData],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i8.FormDataModel>> getCachedFormData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedFormData,
          [],
        ),
        returnValue:
            _i4.Future<List<_i8.FormDataModel>>.value(<_i8.FormDataModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i8.FormDataModel>>.value(<_i8.FormDataModel>[]),
      ) as _i4.Future<List<_i8.FormDataModel>>);
  @override
  _i4.Future<void> clearCachedFormData() => (super.noSuchMethod(
        Invocation.method(
          #clearCachedFormData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i9.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(
          #isConnected,
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
